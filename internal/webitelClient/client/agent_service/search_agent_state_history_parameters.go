// Code generated by go-swagger; DO NOT EDIT.

package agent_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchAgentStateHistoryParams creates a new SearchAgentStateHistoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchAgentStateHistoryParams() *SearchAgentStateHistoryParams {
	return &SearchAgentStateHistoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchAgentStateHistoryParamsWithTimeout creates a new SearchAgentStateHistoryParams object
// with the ability to set a timeout on a request.
func NewSearchAgentStateHistoryParamsWithTimeout(timeout time.Duration) *SearchAgentStateHistoryParams {
	return &SearchAgentStateHistoryParams{
		timeout: timeout,
	}
}

// NewSearchAgentStateHistoryParamsWithContext creates a new SearchAgentStateHistoryParams object
// with the ability to set a context for a request.
func NewSearchAgentStateHistoryParamsWithContext(ctx context.Context) *SearchAgentStateHistoryParams {
	return &SearchAgentStateHistoryParams{
		Context: ctx,
	}
}

// NewSearchAgentStateHistoryParamsWithHTTPClient creates a new SearchAgentStateHistoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchAgentStateHistoryParamsWithHTTPClient(client *http.Client) *SearchAgentStateHistoryParams {
	return &SearchAgentStateHistoryParams{
		HTTPClient: client,
	}
}

/* SearchAgentStateHistoryParams contains all the parameters to send to the API endpoint
   for the search agent state history operation.

   Typically these are written to a http.Request.
*/
type SearchAgentStateHistoryParams struct {

	// AgentID.
	AgentID []string

	// DomainID.
	//
	// Format: int64
	DomainID *string

	// FromID.
	//
	// Format: int64
	FromID *string

	// JoinedAtFrom.
	//
	// Format: int64
	JoinedAtFrom *string

	// JoinedAtTo.
	//
	// Format: int64
	JoinedAtTo *string

	// Page.
	//
	// Format: int32
	Page *int32

	// Size.
	//
	// Format: int32
	Size *int32

	// Sort.
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search agent state history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchAgentStateHistoryParams) WithDefaults() *SearchAgentStateHistoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search agent state history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchAgentStateHistoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithTimeout(timeout time.Duration) *SearchAgentStateHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithContext(ctx context.Context) *SearchAgentStateHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithHTTPClient(client *http.Client) *SearchAgentStateHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgentID adds the agentID to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithAgentID(agentID []string) *SearchAgentStateHistoryParams {
	o.SetAgentID(agentID)
	return o
}

// SetAgentID adds the agentId to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetAgentID(agentID []string) {
	o.AgentID = agentID
}

// WithDomainID adds the domainID to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithDomainID(domainID *string) *SearchAgentStateHistoryParams {
	o.SetDomainID(domainID)
	return o
}

// SetDomainID adds the domainId to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetDomainID(domainID *string) {
	o.DomainID = domainID
}

// WithFromID adds the fromID to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithFromID(fromID *string) *SearchAgentStateHistoryParams {
	o.SetFromID(fromID)
	return o
}

// SetFromID adds the fromId to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetFromID(fromID *string) {
	o.FromID = fromID
}

// WithJoinedAtFrom adds the joinedAtFrom to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithJoinedAtFrom(joinedAtFrom *string) *SearchAgentStateHistoryParams {
	o.SetJoinedAtFrom(joinedAtFrom)
	return o
}

// SetJoinedAtFrom adds the joinedAtFrom to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetJoinedAtFrom(joinedAtFrom *string) {
	o.JoinedAtFrom = joinedAtFrom
}

// WithJoinedAtTo adds the joinedAtTo to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithJoinedAtTo(joinedAtTo *string) *SearchAgentStateHistoryParams {
	o.SetJoinedAtTo(joinedAtTo)
	return o
}

// SetJoinedAtTo adds the joinedAtTo to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetJoinedAtTo(joinedAtTo *string) {
	o.JoinedAtTo = joinedAtTo
}

// WithPage adds the page to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithPage(page *int32) *SearchAgentStateHistoryParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetPage(page *int32) {
	o.Page = page
}

// WithSize adds the size to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithSize(size *int32) *SearchAgentStateHistoryParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the search agent state history params
func (o *SearchAgentStateHistoryParams) WithSort(sort *string) *SearchAgentStateHistoryParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the search agent state history params
func (o *SearchAgentStateHistoryParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *SearchAgentStateHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AgentID != nil {

		// binding items for agent_id
		joinedAgentID := o.bindParamAgentID(reg)

		// query array param agent_id
		if err := r.SetQueryParam("agent_id", joinedAgentID...); err != nil {
			return err
		}
	}

	if o.DomainID != nil {

		// query param domain_id
		var qrDomainID string

		if o.DomainID != nil {
			qrDomainID = *o.DomainID
		}
		qDomainID := qrDomainID
		if qDomainID != "" {

			if err := r.SetQueryParam("domain_id", qDomainID); err != nil {
				return err
			}
		}
	}

	if o.FromID != nil {

		// query param from_id
		var qrFromID string

		if o.FromID != nil {
			qrFromID = *o.FromID
		}
		qFromID := qrFromID
		if qFromID != "" {

			if err := r.SetQueryParam("from_id", qFromID); err != nil {
				return err
			}
		}
	}

	if o.JoinedAtFrom != nil {

		// query param joined_at.from
		var qrJoinedAtFrom string

		if o.JoinedAtFrom != nil {
			qrJoinedAtFrom = *o.JoinedAtFrom
		}
		qJoinedAtFrom := qrJoinedAtFrom
		if qJoinedAtFrom != "" {

			if err := r.SetQueryParam("joined_at.from", qJoinedAtFrom); err != nil {
				return err
			}
		}
	}

	if o.JoinedAtTo != nil {

		// query param joined_at.to
		var qrJoinedAtTo string

		if o.JoinedAtTo != nil {
			qrJoinedAtTo = *o.JoinedAtTo
		}
		qJoinedAtTo := qrJoinedAtTo
		if qJoinedAtTo != "" {

			if err := r.SetQueryParam("joined_at.to", qJoinedAtTo); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int32

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSearchAgentStateHistory binds the parameter agent_id
func (o *SearchAgentStateHistoryParams) bindParamAgentID(formats strfmt.Registry) []string {
	agentIDIR := o.AgentID

	var agentIDIC []string
	for _, agentIDIIR := range agentIDIR { // explode []string

		agentIDIIV := agentIDIIR // string as string
		agentIDIC = append(agentIDIC, agentIDIIV)
	}

	// items.CollectionFormat: "multi"
	agentIDIS := swag.JoinByFormat(agentIDIC, "multi")

	return agentIDIS
}
