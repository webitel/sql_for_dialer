// Code generated by go-swagger; DO NOT EDIT.

package outbound_resource_group_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// SearchOutboundResourceInGroupReader is a Reader for the SearchOutboundResourceInGroup structure.
type SearchOutboundResourceInGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchOutboundResourceInGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchOutboundResourceInGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSearchOutboundResourceInGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchOutboundResourceInGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchOutboundResourceInGroupOK creates a SearchOutboundResourceInGroupOK with default headers values
func NewSearchOutboundResourceInGroupOK() *SearchOutboundResourceInGroupOK {
	return &SearchOutboundResourceInGroupOK{}
}

/* SearchOutboundResourceInGroupOK describes a response with status code 200, with default header values.

A successful response.
*/
type SearchOutboundResourceInGroupOK struct {
	Payload *models.EngineListOutboundResourceInGroup
}

func (o *SearchOutboundResourceInGroupOK) Error() string {
	return fmt.Sprintf("[GET /call_center/resource_group/{group_id}/resource][%d] searchOutboundResourceInGroupOK  %+v", 200, o.Payload)
}
func (o *SearchOutboundResourceInGroupOK) GetPayload() *models.EngineListOutboundResourceInGroup {
	return o.Payload
}

func (o *SearchOutboundResourceInGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineListOutboundResourceInGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOutboundResourceInGroupForbidden creates a SearchOutboundResourceInGroupForbidden with default headers values
func NewSearchOutboundResourceInGroupForbidden() *SearchOutboundResourceInGroupForbidden {
	return &SearchOutboundResourceInGroupForbidden{}
}

/* SearchOutboundResourceInGroupForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type SearchOutboundResourceInGroupForbidden struct {
	Payload interface{}
}

func (o *SearchOutboundResourceInGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /call_center/resource_group/{group_id}/resource][%d] searchOutboundResourceInGroupForbidden  %+v", 403, o.Payload)
}
func (o *SearchOutboundResourceInGroupForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchOutboundResourceInGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOutboundResourceInGroupNotFound creates a SearchOutboundResourceInGroupNotFound with default headers values
func NewSearchOutboundResourceInGroupNotFound() *SearchOutboundResourceInGroupNotFound {
	return &SearchOutboundResourceInGroupNotFound{}
}

/* SearchOutboundResourceInGroupNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type SearchOutboundResourceInGroupNotFound struct {
	Payload string
}

func (o *SearchOutboundResourceInGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /call_center/resource_group/{group_id}/resource][%d] searchOutboundResourceInGroupNotFound  %+v", 404, o.Payload)
}
func (o *SearchOutboundResourceInGroupNotFound) GetPayload() string {
	return o.Payload
}

func (o *SearchOutboundResourceInGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
