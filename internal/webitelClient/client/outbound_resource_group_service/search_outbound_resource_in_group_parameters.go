// Code generated by go-swagger; DO NOT EDIT.

package outbound_resource_group_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchOutboundResourceInGroupParams creates a new SearchOutboundResourceInGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchOutboundResourceInGroupParams() *SearchOutboundResourceInGroupParams {
	return &SearchOutboundResourceInGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchOutboundResourceInGroupParamsWithTimeout creates a new SearchOutboundResourceInGroupParams object
// with the ability to set a timeout on a request.
func NewSearchOutboundResourceInGroupParamsWithTimeout(timeout time.Duration) *SearchOutboundResourceInGroupParams {
	return &SearchOutboundResourceInGroupParams{
		timeout: timeout,
	}
}

// NewSearchOutboundResourceInGroupParamsWithContext creates a new SearchOutboundResourceInGroupParams object
// with the ability to set a context for a request.
func NewSearchOutboundResourceInGroupParamsWithContext(ctx context.Context) *SearchOutboundResourceInGroupParams {
	return &SearchOutboundResourceInGroupParams{
		Context: ctx,
	}
}

// NewSearchOutboundResourceInGroupParamsWithHTTPClient creates a new SearchOutboundResourceInGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchOutboundResourceInGroupParamsWithHTTPClient(client *http.Client) *SearchOutboundResourceInGroupParams {
	return &SearchOutboundResourceInGroupParams{
		HTTPClient: client,
	}
}

/* SearchOutboundResourceInGroupParams contains all the parameters to send to the API endpoint
   for the search outbound resource in group operation.

   Typically these are written to a http.Request.
*/
type SearchOutboundResourceInGroupParams struct {

	// Fields.
	Fields []string

	// GroupID.
	//
	// Format: int64
	GroupID string

	// ID.
	ID []int64

	// Page.
	//
	// Format: int32
	Page *int32

	// Q.
	Q *string

	// Size.
	//
	// Format: int32
	Size *int32

	// Sort.
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search outbound resource in group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchOutboundResourceInGroupParams) WithDefaults() *SearchOutboundResourceInGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search outbound resource in group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchOutboundResourceInGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithTimeout(timeout time.Duration) *SearchOutboundResourceInGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithContext(ctx context.Context) *SearchOutboundResourceInGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithHTTPClient(client *http.Client) *SearchOutboundResourceInGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithFields(fields []string) *SearchOutboundResourceInGroupParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithGroupID adds the groupID to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithGroupID(groupID string) *SearchOutboundResourceInGroupParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithID adds the id to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithID(id []int64) *SearchOutboundResourceInGroupParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetID(id []int64) {
	o.ID = id
}

// WithPage adds the page to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithPage(page *int32) *SearchOutboundResourceInGroupParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetPage(page *int32) {
	o.Page = page
}

// WithQ adds the q to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithQ(q *string) *SearchOutboundResourceInGroupParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetQ(q *string) {
	o.Q = q
}

// WithSize adds the size to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithSize(size *int32) *SearchOutboundResourceInGroupParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) WithSort(sort *string) *SearchOutboundResourceInGroupParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the search outbound resource in group params
func (o *SearchOutboundResourceInGroupParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *SearchOutboundResourceInGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	// path param group_id
	if err := r.SetPathParam("group_id", o.GroupID); err != nil {
		return err
	}

	if o.ID != nil {

		// binding items for id
		joinedID := o.bindParamID(reg)

		// query array param id
		if err := r.SetQueryParam("id", joinedID...); err != nil {
			return err
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int32

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSearchOutboundResourceInGroup binds the parameter fields
func (o *SearchOutboundResourceInGroupParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "multi"
	fieldsIS := swag.JoinByFormat(fieldsIC, "multi")

	return fieldsIS
}

// bindParamSearchOutboundResourceInGroup binds the parameter id
func (o *SearchOutboundResourceInGroupParams) bindParamID(formats strfmt.Registry) []string {
	iDIR := o.ID

	var iDIC []string
	for _, iDIIR := range iDIR { // explode []int64

		iDIIV := swag.FormatInt64(iDIIR) // int64 as string
		iDIC = append(iDIC, iDIIV)
	}

	// items.CollectionFormat: "multi"
	iDIS := swag.JoinByFormat(iDIC, "multi")

	return iDIS
}
