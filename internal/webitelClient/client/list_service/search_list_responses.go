// Code generated by go-swagger; DO NOT EDIT.

package list_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// SearchListReader is a Reader for the SearchList structure.
type SearchListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSearchListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchListOK creates a SearchListOK with default headers values
func NewSearchListOK() *SearchListOK {
	return &SearchListOK{}
}

/* SearchListOK describes a response with status code 200, with default header values.

A successful response.
*/
type SearchListOK struct {
	Payload *models.EngineListOfList
}

func (o *SearchListOK) Error() string {
	return fmt.Sprintf("[GET /call_center/list][%d] searchListOK  %+v", 200, o.Payload)
}
func (o *SearchListOK) GetPayload() *models.EngineListOfList {
	return o.Payload
}

func (o *SearchListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineListOfList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchListForbidden creates a SearchListForbidden with default headers values
func NewSearchListForbidden() *SearchListForbidden {
	return &SearchListForbidden{}
}

/* SearchListForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type SearchListForbidden struct {
	Payload interface{}
}

func (o *SearchListForbidden) Error() string {
	return fmt.Sprintf("[GET /call_center/list][%d] searchListForbidden  %+v", 403, o.Payload)
}
func (o *SearchListForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchListNotFound creates a SearchListNotFound with default headers values
func NewSearchListNotFound() *SearchListNotFound {
	return &SearchListNotFound{}
}

/* SearchListNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type SearchListNotFound struct {
	Payload string
}

func (o *SearchListNotFound) Error() string {
	return fmt.Sprintf("[GET /call_center/list][%d] searchListNotFound  %+v", 404, o.Payload)
}
func (o *SearchListNotFound) GetPayload() string {
	return o.Payload
}

func (o *SearchListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
