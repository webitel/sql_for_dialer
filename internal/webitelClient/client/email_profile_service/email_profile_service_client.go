// Code generated by go-swagger; DO NOT EDIT.

package email_profile_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new email profile service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for email profile service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateEmailProfile(params *CreateEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateEmailProfileOK, error)

	DeleteEmailProfile(params *DeleteEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteEmailProfileOK, error)

	ReadEmailProfile(params *ReadEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ReadEmailProfileOK, error)

	SearchEmailProfile(params *SearchEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SearchEmailProfileOK, error)

	UpdateEmailProfile(params *UpdateEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateEmailProfileOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateEmailProfile creates email profile
*/
func (a *Client) CreateEmailProfile(params *CreateEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateEmailProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateEmailProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateEmailProfile",
		Method:             "POST",
		PathPattern:        "/email/profile",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &CreateEmailProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateEmailProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateEmailProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteEmailProfile removes email profile
*/
func (a *Client) DeleteEmailProfile(params *DeleteEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteEmailProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteEmailProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteEmailProfile",
		Method:             "DELETE",
		PathPattern:        "/email/profile/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteEmailProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteEmailProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteEmailProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadEmailProfile emails profile item
*/
func (a *Client) ReadEmailProfile(params *ReadEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ReadEmailProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadEmailProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ReadEmailProfile",
		Method:             "GET",
		PathPattern:        "/email/profile/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &ReadEmailProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadEmailProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReadEmailProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SearchEmailProfile searches email profile
*/
func (a *Client) SearchEmailProfile(params *SearchEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SearchEmailProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchEmailProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SearchEmailProfile",
		Method:             "GET",
		PathPattern:        "/email/profile",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &SearchEmailProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SearchEmailProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SearchEmailProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateEmailProfile updates email profile
*/
func (a *Client) UpdateEmailProfile(params *UpdateEmailProfileParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateEmailProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateEmailProfileParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateEmailProfile",
		Method:             "PUT",
		PathPattern:        "/email/profile/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &UpdateEmailProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateEmailProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateEmailProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
