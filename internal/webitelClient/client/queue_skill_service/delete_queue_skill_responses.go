// Code generated by go-swagger; DO NOT EDIT.

package queue_skill_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// DeleteQueueSkillReader is a Reader for the DeleteQueueSkill structure.
type DeleteQueueSkillReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteQueueSkillReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteQueueSkillOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteQueueSkillForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteQueueSkillNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteQueueSkillOK creates a DeleteQueueSkillOK with default headers values
func NewDeleteQueueSkillOK() *DeleteQueueSkillOK {
	return &DeleteQueueSkillOK{}
}

/* DeleteQueueSkillOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteQueueSkillOK struct {
	Payload *models.EngineQueueSkill
}

func (o *DeleteQueueSkillOK) Error() string {
	return fmt.Sprintf("[DELETE /call_center/queues/{queue_id}/skills/{id}][%d] deleteQueueSkillOK  %+v", 200, o.Payload)
}
func (o *DeleteQueueSkillOK) GetPayload() *models.EngineQueueSkill {
	return o.Payload
}

func (o *DeleteQueueSkillOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineQueueSkill)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQueueSkillForbidden creates a DeleteQueueSkillForbidden with default headers values
func NewDeleteQueueSkillForbidden() *DeleteQueueSkillForbidden {
	return &DeleteQueueSkillForbidden{}
}

/* DeleteQueueSkillForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type DeleteQueueSkillForbidden struct {
	Payload interface{}
}

func (o *DeleteQueueSkillForbidden) Error() string {
	return fmt.Sprintf("[DELETE /call_center/queues/{queue_id}/skills/{id}][%d] deleteQueueSkillForbidden  %+v", 403, o.Payload)
}
func (o *DeleteQueueSkillForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteQueueSkillForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteQueueSkillNotFound creates a DeleteQueueSkillNotFound with default headers values
func NewDeleteQueueSkillNotFound() *DeleteQueueSkillNotFound {
	return &DeleteQueueSkillNotFound{}
}

/* DeleteQueueSkillNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type DeleteQueueSkillNotFound struct {
	Payload string
}

func (o *DeleteQueueSkillNotFound) Error() string {
	return fmt.Sprintf("[DELETE /call_center/queues/{queue_id}/skills/{id}][%d] deleteQueueSkillNotFound  %+v", 404, o.Payload)
}
func (o *DeleteQueueSkillNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteQueueSkillNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
