// Code generated by go-swagger; DO NOT EDIT.

package queue_resources_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// UpdateQueueResourceGroupReader is a Reader for the UpdateQueueResourceGroup structure.
type UpdateQueueResourceGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateQueueResourceGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateQueueResourceGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateQueueResourceGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateQueueResourceGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateQueueResourceGroupOK creates a UpdateQueueResourceGroupOK with default headers values
func NewUpdateQueueResourceGroupOK() *UpdateQueueResourceGroupOK {
	return &UpdateQueueResourceGroupOK{}
}

/* UpdateQueueResourceGroupOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateQueueResourceGroupOK struct {
	Payload *models.EngineQueueResourceGroup
}

func (o *UpdateQueueResourceGroupOK) Error() string {
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/resource_groups/{id}][%d] updateQueueResourceGroupOK  %+v", 200, o.Payload)
}
func (o *UpdateQueueResourceGroupOK) GetPayload() *models.EngineQueueResourceGroup {
	return o.Payload
}

func (o *UpdateQueueResourceGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineQueueResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQueueResourceGroupForbidden creates a UpdateQueueResourceGroupForbidden with default headers values
func NewUpdateQueueResourceGroupForbidden() *UpdateQueueResourceGroupForbidden {
	return &UpdateQueueResourceGroupForbidden{}
}

/* UpdateQueueResourceGroupForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type UpdateQueueResourceGroupForbidden struct {
	Payload interface{}
}

func (o *UpdateQueueResourceGroupForbidden) Error() string {
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/resource_groups/{id}][%d] updateQueueResourceGroupForbidden  %+v", 403, o.Payload)
}
func (o *UpdateQueueResourceGroupForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateQueueResourceGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQueueResourceGroupNotFound creates a UpdateQueueResourceGroupNotFound with default headers values
func NewUpdateQueueResourceGroupNotFound() *UpdateQueueResourceGroupNotFound {
	return &UpdateQueueResourceGroupNotFound{}
}

/* UpdateQueueResourceGroupNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type UpdateQueueResourceGroupNotFound struct {
	Payload string
}

func (o *UpdateQueueResourceGroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /call_center/queues/{queue_id}/resource_groups/{id}][%d] updateQueueResourceGroupNotFound  %+v", 404, o.Payload)
}
func (o *UpdateQueueResourceGroupNotFound) GetPayload() string {
	return o.Payload
}

func (o *UpdateQueueResourceGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
