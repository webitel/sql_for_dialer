// Code generated by go-swagger; DO NOT EDIT.

package routing_outbound_call_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// DeleteRoutingOutboundCallReader is a Reader for the DeleteRoutingOutboundCall structure.
type DeleteRoutingOutboundCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingOutboundCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoutingOutboundCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteRoutingOutboundCallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingOutboundCallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRoutingOutboundCallOK creates a DeleteRoutingOutboundCallOK with default headers values
func NewDeleteRoutingOutboundCallOK() *DeleteRoutingOutboundCallOK {
	return &DeleteRoutingOutboundCallOK{}
}

/* DeleteRoutingOutboundCallOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteRoutingOutboundCallOK struct {
	Payload *models.EngineRoutingOutboundCall
}

func (o *DeleteRoutingOutboundCallOK) Error() string {
	return fmt.Sprintf("[DELETE /routing/outbound/calls/{id}][%d] deleteRoutingOutboundCallOK  %+v", 200, o.Payload)
}
func (o *DeleteRoutingOutboundCallOK) GetPayload() *models.EngineRoutingOutboundCall {
	return o.Payload
}

func (o *DeleteRoutingOutboundCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineRoutingOutboundCall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingOutboundCallForbidden creates a DeleteRoutingOutboundCallForbidden with default headers values
func NewDeleteRoutingOutboundCallForbidden() *DeleteRoutingOutboundCallForbidden {
	return &DeleteRoutingOutboundCallForbidden{}
}

/* DeleteRoutingOutboundCallForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type DeleteRoutingOutboundCallForbidden struct {
	Payload interface{}
}

func (o *DeleteRoutingOutboundCallForbidden) Error() string {
	return fmt.Sprintf("[DELETE /routing/outbound/calls/{id}][%d] deleteRoutingOutboundCallForbidden  %+v", 403, o.Payload)
}
func (o *DeleteRoutingOutboundCallForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteRoutingOutboundCallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingOutboundCallNotFound creates a DeleteRoutingOutboundCallNotFound with default headers values
func NewDeleteRoutingOutboundCallNotFound() *DeleteRoutingOutboundCallNotFound {
	return &DeleteRoutingOutboundCallNotFound{}
}

/* DeleteRoutingOutboundCallNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type DeleteRoutingOutboundCallNotFound struct {
	Payload string
}

func (o *DeleteRoutingOutboundCallNotFound) Error() string {
	return fmt.Sprintf("[DELETE /routing/outbound/calls/{id}][%d] deleteRoutingOutboundCallNotFound  %+v", 404, o.Payload)
}
func (o *DeleteRoutingOutboundCallNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteRoutingOutboundCallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
