// Code generated by go-swagger; DO NOT EDIT.

package routing_outbound_call_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// MovePositionRoutingOutboundCallReader is a Reader for the MovePositionRoutingOutboundCall structure.
type MovePositionRoutingOutboundCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MovePositionRoutingOutboundCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMovePositionRoutingOutboundCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewMovePositionRoutingOutboundCallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMovePositionRoutingOutboundCallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMovePositionRoutingOutboundCallOK creates a MovePositionRoutingOutboundCallOK with default headers values
func NewMovePositionRoutingOutboundCallOK() *MovePositionRoutingOutboundCallOK {
	return &MovePositionRoutingOutboundCallOK{}
}

/* MovePositionRoutingOutboundCallOK describes a response with status code 200, with default header values.

A successful response.
*/
type MovePositionRoutingOutboundCallOK struct {
	Payload *models.EngineMovePositionRoutingOutboundCallResponse
}

func (o *MovePositionRoutingOutboundCallOK) Error() string {
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{from_id}/to/{to_id}][%d] movePositionRoutingOutboundCallOK  %+v", 200, o.Payload)
}
func (o *MovePositionRoutingOutboundCallOK) GetPayload() *models.EngineMovePositionRoutingOutboundCallResponse {
	return o.Payload
}

func (o *MovePositionRoutingOutboundCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineMovePositionRoutingOutboundCallResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMovePositionRoutingOutboundCallForbidden creates a MovePositionRoutingOutboundCallForbidden with default headers values
func NewMovePositionRoutingOutboundCallForbidden() *MovePositionRoutingOutboundCallForbidden {
	return &MovePositionRoutingOutboundCallForbidden{}
}

/* MovePositionRoutingOutboundCallForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type MovePositionRoutingOutboundCallForbidden struct {
	Payload interface{}
}

func (o *MovePositionRoutingOutboundCallForbidden) Error() string {
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{from_id}/to/{to_id}][%d] movePositionRoutingOutboundCallForbidden  %+v", 403, o.Payload)
}
func (o *MovePositionRoutingOutboundCallForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *MovePositionRoutingOutboundCallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMovePositionRoutingOutboundCallNotFound creates a MovePositionRoutingOutboundCallNotFound with default headers values
func NewMovePositionRoutingOutboundCallNotFound() *MovePositionRoutingOutboundCallNotFound {
	return &MovePositionRoutingOutboundCallNotFound{}
}

/* MovePositionRoutingOutboundCallNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type MovePositionRoutingOutboundCallNotFound struct {
	Payload string
}

func (o *MovePositionRoutingOutboundCallNotFound) Error() string {
	return fmt.Sprintf("[PATCH /routing/outbound/calls/{from_id}/to/{to_id}][%d] movePositionRoutingOutboundCallNotFound  %+v", 404, o.Payload)
}
func (o *MovePositionRoutingOutboundCallNotFound) GetPayload() string {
	return o.Payload
}

func (o *MovePositionRoutingOutboundCallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
