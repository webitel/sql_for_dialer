// Code generated by go-swagger; DO NOT EDIT.

package routing_variable_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// DeleteRoutingVariableReader is a Reader for the DeleteRoutingVariable structure.
type DeleteRoutingVariableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoutingVariableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoutingVariableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteRoutingVariableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoutingVariableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRoutingVariableOK creates a DeleteRoutingVariableOK with default headers values
func NewDeleteRoutingVariableOK() *DeleteRoutingVariableOK {
	return &DeleteRoutingVariableOK{}
}

/* DeleteRoutingVariableOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteRoutingVariableOK struct {
	Payload *models.EngineRoutingVariable
}

func (o *DeleteRoutingVariableOK) Error() string {
	return fmt.Sprintf("[DELETE /routing/variables/{id}][%d] deleteRoutingVariableOK  %+v", 200, o.Payload)
}
func (o *DeleteRoutingVariableOK) GetPayload() *models.EngineRoutingVariable {
	return o.Payload
}

func (o *DeleteRoutingVariableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineRoutingVariable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingVariableForbidden creates a DeleteRoutingVariableForbidden with default headers values
func NewDeleteRoutingVariableForbidden() *DeleteRoutingVariableForbidden {
	return &DeleteRoutingVariableForbidden{}
}

/* DeleteRoutingVariableForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type DeleteRoutingVariableForbidden struct {
	Payload interface{}
}

func (o *DeleteRoutingVariableForbidden) Error() string {
	return fmt.Sprintf("[DELETE /routing/variables/{id}][%d] deleteRoutingVariableForbidden  %+v", 403, o.Payload)
}
func (o *DeleteRoutingVariableForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteRoutingVariableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoutingVariableNotFound creates a DeleteRoutingVariableNotFound with default headers values
func NewDeleteRoutingVariableNotFound() *DeleteRoutingVariableNotFound {
	return &DeleteRoutingVariableNotFound{}
}

/* DeleteRoutingVariableNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type DeleteRoutingVariableNotFound struct {
	Payload string
}

func (o *DeleteRoutingVariableNotFound) Error() string {
	return fmt.Sprintf("[DELETE /routing/variables/{id}][%d] deleteRoutingVariableNotFound  %+v", 404, o.Payload)
}
func (o *DeleteRoutingVariableNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteRoutingVariableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
