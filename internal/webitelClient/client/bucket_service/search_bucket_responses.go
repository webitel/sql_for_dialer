// Code generated by go-swagger; DO NOT EDIT.

package bucket_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// SearchBucketReader is a Reader for the SearchBucket structure.
type SearchBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSearchBucketForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchBucketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchBucketOK creates a SearchBucketOK with default headers values
func NewSearchBucketOK() *SearchBucketOK {
	return &SearchBucketOK{}
}

/* SearchBucketOK describes a response with status code 200, with default header values.

A successful response.
*/
type SearchBucketOK struct {
	Payload *models.EngineListBucket
}

func (o *SearchBucketOK) Error() string {
	return fmt.Sprintf("[GET /call_center/buckets][%d] searchBucketOK  %+v", 200, o.Payload)
}
func (o *SearchBucketOK) GetPayload() *models.EngineListBucket {
	return o.Payload
}

func (o *SearchBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineListBucket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchBucketForbidden creates a SearchBucketForbidden with default headers values
func NewSearchBucketForbidden() *SearchBucketForbidden {
	return &SearchBucketForbidden{}
}

/* SearchBucketForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type SearchBucketForbidden struct {
	Payload interface{}
}

func (o *SearchBucketForbidden) Error() string {
	return fmt.Sprintf("[GET /call_center/buckets][%d] searchBucketForbidden  %+v", 403, o.Payload)
}
func (o *SearchBucketForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchBucketForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchBucketNotFound creates a SearchBucketNotFound with default headers values
func NewSearchBucketNotFound() *SearchBucketNotFound {
	return &SearchBucketNotFound{}
}

/* SearchBucketNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type SearchBucketNotFound struct {
	Payload string
}

func (o *SearchBucketNotFound) Error() string {
	return fmt.Sprintf("[GET /call_center/buckets][%d] searchBucketNotFound  %+v", 404, o.Payload)
}
func (o *SearchBucketNotFound) GetPayload() string {
	return o.Payload
}

func (o *SearchBucketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
