// Code generated by go-swagger; DO NOT EDIT.

package call_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// NewDtmfCallParams creates a new DtmfCallParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDtmfCallParams() *DtmfCallParams {
	return &DtmfCallParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDtmfCallParamsWithTimeout creates a new DtmfCallParams object
// with the ability to set a timeout on a request.
func NewDtmfCallParamsWithTimeout(timeout time.Duration) *DtmfCallParams {
	return &DtmfCallParams{
		timeout: timeout,
	}
}

// NewDtmfCallParamsWithContext creates a new DtmfCallParams object
// with the ability to set a context for a request.
func NewDtmfCallParamsWithContext(ctx context.Context) *DtmfCallParams {
	return &DtmfCallParams{
		Context: ctx,
	}
}

// NewDtmfCallParamsWithHTTPClient creates a new DtmfCallParams object
// with the ability to set a custom HTTPClient for a request.
func NewDtmfCallParamsWithHTTPClient(client *http.Client) *DtmfCallParams {
	return &DtmfCallParams{
		HTTPClient: client,
	}
}

/* DtmfCallParams contains all the parameters to send to the API endpoint
   for the dtmf call operation.

   Typically these are written to a http.Request.
*/
type DtmfCallParams struct {

	// Body.
	Body *models.EngineDtmfCallRequest

	// ID.
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the dtmf call params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DtmfCallParams) WithDefaults() *DtmfCallParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the dtmf call params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DtmfCallParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the dtmf call params
func (o *DtmfCallParams) WithTimeout(timeout time.Duration) *DtmfCallParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the dtmf call params
func (o *DtmfCallParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the dtmf call params
func (o *DtmfCallParams) WithContext(ctx context.Context) *DtmfCallParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the dtmf call params
func (o *DtmfCallParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the dtmf call params
func (o *DtmfCallParams) WithHTTPClient(client *http.Client) *DtmfCallParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the dtmf call params
func (o *DtmfCallParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the dtmf call params
func (o *DtmfCallParams) WithBody(body *models.EngineDtmfCallRequest) *DtmfCallParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the dtmf call params
func (o *DtmfCallParams) SetBody(body *models.EngineDtmfCallRequest) {
	o.Body = body
}

// WithID adds the id to the dtmf call params
func (o *DtmfCallParams) WithID(id string) *DtmfCallParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the dtmf call params
func (o *DtmfCallParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DtmfCallParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
