// Code generated by go-swagger; DO NOT EDIT.

package call_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// AggregateHistoryCallReader is a Reader for the AggregateHistoryCall structure.
type AggregateHistoryCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AggregateHistoryCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAggregateHistoryCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAggregateHistoryCallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAggregateHistoryCallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAggregateHistoryCallOK creates a AggregateHistoryCallOK with default headers values
func NewAggregateHistoryCallOK() *AggregateHistoryCallOK {
	return &AggregateHistoryCallOK{}
}

/* AggregateHistoryCallOK describes a response with status code 200, with default header values.

A successful response.
*/
type AggregateHistoryCallOK struct {
	Payload *models.EngineListAggregate
}

func (o *AggregateHistoryCallOK) Error() string {
	return fmt.Sprintf("[POST /calls/history/aggregate][%d] aggregateHistoryCallOK  %+v", 200, o.Payload)
}
func (o *AggregateHistoryCallOK) GetPayload() *models.EngineListAggregate {
	return o.Payload
}

func (o *AggregateHistoryCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineListAggregate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAggregateHistoryCallForbidden creates a AggregateHistoryCallForbidden with default headers values
func NewAggregateHistoryCallForbidden() *AggregateHistoryCallForbidden {
	return &AggregateHistoryCallForbidden{}
}

/* AggregateHistoryCallForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type AggregateHistoryCallForbidden struct {
	Payload interface{}
}

func (o *AggregateHistoryCallForbidden) Error() string {
	return fmt.Sprintf("[POST /calls/history/aggregate][%d] aggregateHistoryCallForbidden  %+v", 403, o.Payload)
}
func (o *AggregateHistoryCallForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AggregateHistoryCallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAggregateHistoryCallNotFound creates a AggregateHistoryCallNotFound with default headers values
func NewAggregateHistoryCallNotFound() *AggregateHistoryCallNotFound {
	return &AggregateHistoryCallNotFound{}
}

/* AggregateHistoryCallNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type AggregateHistoryCallNotFound struct {
	Payload string
}

func (o *AggregateHistoryCallNotFound) Error() string {
	return fmt.Sprintf("[POST /calls/history/aggregate][%d] aggregateHistoryCallNotFound  %+v", 404, o.Payload)
}
func (o *AggregateHistoryCallNotFound) GetPayload() string {
	return o.Payload
}

func (o *AggregateHistoryCallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
