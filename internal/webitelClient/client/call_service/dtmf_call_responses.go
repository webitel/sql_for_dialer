// Code generated by go-swagger; DO NOT EDIT.

package call_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// DtmfCallReader is a Reader for the DtmfCall structure.
type DtmfCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DtmfCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDtmfCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDtmfCallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDtmfCallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDtmfCallOK creates a DtmfCallOK with default headers values
func NewDtmfCallOK() *DtmfCallOK {
	return &DtmfCallOK{}
}

/* DtmfCallOK describes a response with status code 200, with default header values.

A successful response.
*/
type DtmfCallOK struct {
	Payload models.EngineDtmfCallResponse
}

func (o *DtmfCallOK) Error() string {
	return fmt.Sprintf("[PATCH /calls/active/{id}/dtmf][%d] dtmfCallOK  %+v", 200, o.Payload)
}
func (o *DtmfCallOK) GetPayload() models.EngineDtmfCallResponse {
	return o.Payload
}

func (o *DtmfCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDtmfCallForbidden creates a DtmfCallForbidden with default headers values
func NewDtmfCallForbidden() *DtmfCallForbidden {
	return &DtmfCallForbidden{}
}

/* DtmfCallForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type DtmfCallForbidden struct {
	Payload interface{}
}

func (o *DtmfCallForbidden) Error() string {
	return fmt.Sprintf("[PATCH /calls/active/{id}/dtmf][%d] dtmfCallForbidden  %+v", 403, o.Payload)
}
func (o *DtmfCallForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DtmfCallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDtmfCallNotFound creates a DtmfCallNotFound with default headers values
func NewDtmfCallNotFound() *DtmfCallNotFound {
	return &DtmfCallNotFound{}
}

/* DtmfCallNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type DtmfCallNotFound struct {
	Payload string
}

func (o *DtmfCallNotFound) Error() string {
	return fmt.Sprintf("[PATCH /calls/active/{id}/dtmf][%d] dtmfCallNotFound  %+v", 404, o.Payload)
}
func (o *DtmfCallNotFound) GetPayload() string {
	return o.Payload
}

func (o *DtmfCallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
