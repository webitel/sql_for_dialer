// Code generated by go-swagger; DO NOT EDIT.

package member_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/webitel/sql_for_dialer/internal/webitelClient/models"
)

// NewAttemptResultParams creates a new AttemptResultParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAttemptResultParams() *AttemptResultParams {
	return &AttemptResultParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAttemptResultParamsWithTimeout creates a new AttemptResultParams object
// with the ability to set a timeout on a request.
func NewAttemptResultParamsWithTimeout(timeout time.Duration) *AttemptResultParams {
	return &AttemptResultParams{
		timeout: timeout,
	}
}

// NewAttemptResultParamsWithContext creates a new AttemptResultParams object
// with the ability to set a context for a request.
func NewAttemptResultParamsWithContext(ctx context.Context) *AttemptResultParams {
	return &AttemptResultParams{
		Context: ctx,
	}
}

// NewAttemptResultParamsWithHTTPClient creates a new AttemptResultParams object
// with the ability to set a custom HTTPClient for a request.
func NewAttemptResultParamsWithHTTPClient(client *http.Client) *AttemptResultParams {
	return &AttemptResultParams{
		HTTPClient: client,
	}
}

/* AttemptResultParams contains all the parameters to send to the API endpoint
   for the attempt result operation.

   Typically these are written to a http.Request.
*/
type AttemptResultParams struct {

	// AttemptID.
	//
	// Format: int64
	AttemptID string

	// Body.
	Body *models.EngineAttemptResultRequest

	// MemberID.
	//
	// Format: int64
	MemberID string

	// QueueID.
	//
	// Format: int32
	QueueID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the attempt result params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttemptResultParams) WithDefaults() *AttemptResultParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the attempt result params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttemptResultParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the attempt result params
func (o *AttemptResultParams) WithTimeout(timeout time.Duration) *AttemptResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the attempt result params
func (o *AttemptResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the attempt result params
func (o *AttemptResultParams) WithContext(ctx context.Context) *AttemptResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the attempt result params
func (o *AttemptResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the attempt result params
func (o *AttemptResultParams) WithHTTPClient(client *http.Client) *AttemptResultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the attempt result params
func (o *AttemptResultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttemptID adds the attemptID to the attempt result params
func (o *AttemptResultParams) WithAttemptID(attemptID string) *AttemptResultParams {
	o.SetAttemptID(attemptID)
	return o
}

// SetAttemptID adds the attemptId to the attempt result params
func (o *AttemptResultParams) SetAttemptID(attemptID string) {
	o.AttemptID = attemptID
}

// WithBody adds the body to the attempt result params
func (o *AttemptResultParams) WithBody(body *models.EngineAttemptResultRequest) *AttemptResultParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the attempt result params
func (o *AttemptResultParams) SetBody(body *models.EngineAttemptResultRequest) {
	o.Body = body
}

// WithMemberID adds the memberID to the attempt result params
func (o *AttemptResultParams) WithMemberID(memberID string) *AttemptResultParams {
	o.SetMemberID(memberID)
	return o
}

// SetMemberID adds the memberId to the attempt result params
func (o *AttemptResultParams) SetMemberID(memberID string) {
	o.MemberID = memberID
}

// WithQueueID adds the queueID to the attempt result params
func (o *AttemptResultParams) WithQueueID(queueID int32) *AttemptResultParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the attempt result params
func (o *AttemptResultParams) SetQueueID(queueID int32) {
	o.QueueID = queueID
}

// WriteToRequest writes these params to a swagger request
func (o *AttemptResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param attempt_id
	if err := r.SetPathParam("attempt_id", o.AttemptID); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param member_id
	if err := r.SetPathParam("member_id", o.MemberID); err != nil {
		return err
	}

	// path param queue_id
	if err := r.SetPathParam("queue_id", swag.FormatInt32(o.QueueID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
